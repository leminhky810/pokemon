plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}
apply from: "$rootDir/versions.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.elon.pokemon"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {

    //android supports
    implementation (
            "androidx.appcompat:appcompat:$versions.app_compat",
            "com.google.android.material:material:$versions.material",
            "androidx.constraintlayout:constraintlayout:$versions.constrain_layout",
            "androidx.recyclerview:recyclerview:$versions.recycler_view"
    )

    // kotlin
    implementation (
            "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin_gradle",
            "androidx.core:core-ktx:$versions.kotlin_core"
    )

    // lifecycle
    implementation (
            "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle_version",
            "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version",
            "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle_version"
    )

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt_gradle"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt_gradle"

    // network
    implementation (
            "com.squareup.retrofit2:retrofit:$versions.retrofit",
            "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
            //optimize speed
            "com.github.skydoves:sandwich:$versions.sandwich",
    )

    // room
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
/**    //coroutines test
*    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
*    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"*/

    // extensions
    implementation (
            "androidx.startup:startup-runtime:$versions.startup_version",
            "com.jakewharton.timber:timber:$versions.timber",
            "com.squareup.moshi:moshi-kotlin:$versions.moshi",
            //hover for glide
            "com.github.florent37:glidepalette:$versions.glide_palette",
            "com.github.bumptech.glide:glide:$versions.glide"
    )
    //kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // animations
    implementation "com.github.skydoves:transformationlayout:$versions.transformation_layout"

/**    // unit test
*    testImplementation "junit:junit:$versions.junit"
*    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_junit"
*    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx_espresso"*/

}